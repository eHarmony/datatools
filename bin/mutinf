#! /usr/bin/env perl
$|=1;

use warnings;
use strict;

use IO::File;

my $usage = "zcat data.gz | $0 header [ (+|-) list]\n";
my $headerfile = shift @ARGV or die "$usage";
my $include = shift @ARGV;
my $list = shift @ARGV;
my $headerfh = new IO::File $headerfile, "r" or die $!;
my $headerline = <$headerfh>;
undef $headerfh;

chomp $headerline;
my @headers = split /,/, $headerline;
my %headers;
my $index = 0;


foreach my $header (@headers)
  { 
    $headers{$header} = $index unless exists $headers{$header};
    ++$index;
    die "bad header $header" if $header =~ /:\|\s/;
  }

my %whitelist = map { $_ => 1 } split(/ |\t/, ($include == '+') ? $list : '' );
my %blacklist = map { $_ => 1 } split(/ |\t/, ($include == '-') ? $list : '' );

my @okkeys = ();
if($include == '+')
{
	@okkeys = grep { exists $whitelist{$_} } keys %headers;
}
else
{
	@okkeys = grep { ! exists $blacklist{$_} } keys %headers;
}

print join '|', @okkeys;

my %counts;
my $totalpos = 0;
my $total = 0;

while (<>)
  {
    chomp;
    my @line = split /\t/, $_;

    my $positive = defined $headers{LABEL};

    foreach my $col (@okkeys)
      {
        foreach my $val ('total', $line[$headers{$col}])
          {
            $counts{$col} ||= {};
            $counts{$col}->{$val} ||= [ 0, 0 ];
            
            if ($positive)
              {
                ++$counts{$col}->{$val}->[0];
                ++$totalpos;
              }

            ++$counts{$col}->{$val}->[1];
            ++$total;
          }
      }
  }

my $px1 = $totalpos / $total;
my $px0 = 1 - $px1;

my $selfinf = 0;
$selfinf += $px0 * log ($px0) if $px0 > 0;
$selfinf += $px1 * log ($px1) if $px1 > 0;

foreach my $col (keys %counts)
  {
    my @values = keys %{$counts{$col}};

    my $conditionalent = 0;

    my (undef, $totaln) = @{$counts{$col}->{'total'}};

    foreach my $v (@values)
      {
        next if $v eq 'total';

        my ($c, $n) = @{$counts{$col}->{$v}};
        my $py = $n / $totaln;
        my $px1gy = $c / $n;
        my $px0gy = 1 - $px1gy;

        if ($px0gy > 0)
          {
            $conditionalent += $py * $px0gy * log ($px0gy);
          }

        if ($px1gy > 0)
          {
            $conditionalent += $py * $px1gy * log ($px1gy);
          }
      }

    print join "\t", $col, $selfinf - $conditionalent;
    print "\n";
  }

