#!/usr/bin/perl -n

use strict;
use warnings;
use Cwd;

$|=1;

#die cwd();

s/__([A-Za-z]\w+?)__/$ENV{$1}/eg;

if(/^(.*)__INCLUDE\(([^)]*)\)(.*)$/)
{
	my $headerfile = $2;
	my $prefix=$1;
	my $postfix=$3;
	open(H, "$headerfile")|| die "Cannot open header $headerfile:$!\n";
	my @lines=();
	print $prefix;
	while(my $l=<H>)
	{
		print $l;
	};
	print $postfix . "\n";
	close H;
}
if(/^(.*)__HEADER\(([^)]*)\)(.*)$/)
{
	my $headerfile = $2;
	my $prefix=$1;
	my $postfix=$3;
	open(H, "$headerfile")|| die "Cannot open header $headerfile:$!\n";
	my $line = <H>;
	chomp $line;
	my @vals = split(/\t/, $line);
	print $prefix . join(", ", map { "$_ STRING";} @vals). $postfix . "\n";
	close H;
}
elsif(/^__FOREACH_(\w+?):(.*)__X(.*)/)
{
	my @vals = split(' ',$ENV{$1});
	foreach my $v (@vals)
	{
		print "$2$v$3\n";
	}
}
elsif(/__FOREACH_(\w+?)_(.*):\((.*)__X(.*)\)/)
{
	my @vals = split(' ',$ENV{$1});
	my @res=();
	foreach my $v (@vals)
	{
		push @res, "$3$v$4";
	}
	my $res = join("$2", @res);
	s/__FOREACH_(\w+?):\((.*)__X(.*)\)/$res/;
}
else
{
	print $_;
}
