#!/usr/bin/env bash

if [ -f config.sh ]
then
	. config.sh
else
	if [ "$4" == "" ]
	then
		model_id="TBC"
		model_name="TBC"
		model_class="TBC"
		qs=""
	else
		model_id=$3
		model_name=$4
		model_class="TBC"
		qs=""
	fi
fi


usage="$0 weights spline [model_id model_name qs]"

set +u
if [ "$2" == "" ]
then
	echo $usage
	exit
fi	

weights=$1
spline=$2
shift
shift


set -e 
set -u

min=`cat $spline | head -1 | cut -f1`
max=`cat $spline | tail -1 | cut -f1`
weights_size=`cat $weights | egrep -v '^\s*$' | wc -l`
spline_size=`cat $spline | wc -l`
# "size" : 0, "data" : []
qsjson=`echo $qs| perl -pe 's/-q //g;'| perl -lane 'print "\"size\" : " . scalar @F . ", \"data\" : [" . join( ",", map {"\"$_\"";} @F) . "]"'`

stamp=`date +%Y-%m-%d-%H:%M:%S`

echo ' 
{
	"className" : "'$model_class'",
	"configuration" : {
		"type" : "model",
		"modelId" : {
			"id" : '$model_id',
			"name" : "'$model_name'"
		},
                "properties" : {
                        "stamp" : "'$stamp'"'
#                        "attributes" : ['
# attributes needed
#echo '                        ]'
#                        "features" : {'
#cat $weights | egrep -v '^Constant' | cut -f1 -d=| cut -c2-| perl -pe 's/^\^//;'| uniq.pl \
#| perl -F: -lane 'push @f, "\t\t\t\"$F[0]\" : $F[0]" unless /^\s*$/; END {print join ",\n", @f;}' \
#| perl -pe 's/^/\t\t\t\t"/;s/$/",/;'
#cat model-final.weights | egrep -v '^Constant' | cut -f1 -d=| cut -c2-| perl -pe 's/^\^//;'| uniq.pl | less
echo \
'                        }
                },
		"interactions" : { '$qsjson' },
		"spline" : {
			"type" : "irregular",
			"domainMin" : '$min',
			"domainMax" : '$max',
			"size" : '$spline_size',
			"data" : {'

#			0.000104,
#...
#	/* 3.05 */	0.187993, 
#	/* 3.10 */	0.191800,
#	/* 3.15 */	0.994975,
#...
cat $spline | perl -lane 'push @f, "\t\t\t\"$F[0]\" :\t$F[1]"; END {print join ",\n", @f;}'

echo '			}
		},
		"weights" : {
			"size" : '$weights_size',
			"data" : { '

#				"xsame^INCEQ" : -0.31886,
#				"xsame^INCNE" : -0.508989
cat $weights | perl -F: -lane 'push @f, "\t\t\t\"$F[0]\" : $F[1]" unless /^\s*$/; END {print join ",\n", @f;}'
echo '            }
        } 
    }
}'
